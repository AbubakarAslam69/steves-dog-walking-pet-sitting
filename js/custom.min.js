$(function () {
  sliderInit();
  preLoader();
  imgRevealer();
  replaceHash();
  lenisSetup();

  AOS.init({
    duration: 1500,
    disable: "mobile",
  });
  Fancybox.bind();
});

// GSAP PRELOADER

function preLoader() {
  const tl = gsap.timeline({ duration: 0.1 });
  tl.to(".preLoader.black > img", {
    y: 50,
    autoAlpha: 0,
  })
    .to(".preLoader.black", {
      yPercent: -100,
    })
    .to(".preLoader.white", {
      yPercent: -100,
    })
    .to(".preLoader", {
      css: { display: "none" },
    })
    .from(".mouse", {
      y: -50,
      autoAlpha: 0,
    })
    .from(
      ".navbar-brand > img",
      {
        x: -50,
        autoAlpha: 0,
      },
      "-=1"
    )
    .from(
      ".navbar-nav > li, .form-inline a",
      {
        autoAlpha: 0,
        x: 100,
        stagger: 0.05,
      },
      "-=1"
    )
    .from(
      ".slideOne",
      {
        autoAlpha: 0,
        yPercent: 100,
        stagger: 0.05,
      },
      "-=1"
    );
}
function lenisSetup() {
  const lenis = new Lenis({
    duration: 1.5,
    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
    smooth: true,
    mouseMultiplier: 1,
  });

  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }
  requestAnimationFrame(raf);
  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener("click", function (e) {
      e.preventDefault();
      lenis.scrollTo(this.getAttribute("href"));
    });
  });
  lenis.scrollTo("top");
}

function replaceHash() {
  document.querySelectorAll("a").forEach((a) => {
    let href = a.getAttribute("href");
    a.href = href
      ? href.startsWith("#") && href.endsWith("#")
        ? href.replace("#", "javascript:void(0)")
        : href
      : "javascript:void(0)";
  });
}

function sliderInit() {
  const swiperOptions = {
    loop: true,
    speed: 1000,
    parallax: true,
    autoplay: {
      delay: 3500,
      disableOnInteraction: false,
    },
    autoplay: false,
    grabCursor: false,
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
  };
  var mainbanner = new Swiper(".mainbanner", swiperOptions);
  var pageSections = document.querySelectorAll(".mainbanner__img");
  pageSections.forEach(function (pageSection) {
    var backgroundUrl = pageSection.getAttribute("data-background");
    if (backgroundUrl) {
      pageSection.style.backgroundImage = "url(" + backgroundUrl + ")";
    }
  });

  var logoSlider = new Swiper(".logoSlider", {
    loop: true,
    autoplay: true,
    slidesPerView: 1,
    spaceBetween: 10,
    centeredSlides: true,
    roundLengths: true,
    breakpoints: {
      1199: {
        slidesPerView: 5,
        spaceBetween: 10,
      },
      768: {
        slidesPerView: 4,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 3,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 2,
        spaceBetween: 10,
      },
    },
  });

  var industrySlider = new Swiper(".industrySlider", {
    loop: true,
    slidesPerView: 4,
    spaceBetween: 20,
    breakpoints: {
      1024: {
        slidesPerView: 4,
        spaceBetween: 20,
      },
      768: {
        slidesPerView: 1,
        spaceBetween: 20,
      },
      640: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
    scrollbar: {
      el: ".swiper-scrollbar",
    },
  });
  var categorieSlider = new Swiper(".categorieSlider", {
    loop: true,
    autoplay: true,
    slidesPerView: 5,
    spaceBetween: 10,
    // centeredSlides: true,
    // roundLengths: true,
    // If we need pagination

    breakpoints: {
      1024: {
        slidesPerView: 4,
        spaceBetween: 26,
      },
      768: {
        slidesPerView: 3,
        spaceBetween: 20,
      },
      640: {
        slidesPerView: 2,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
    },

    // Navigation arrows
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
    pagination: {
      el: ".swiper-pagination",
      // type: 'fraction'
    },

    // And if we need scrollbar
    scrollbar: {
      el: ".swiper-scrollbar",
    },
  });
  var clientSlider = new Swiper(".clientSlider", {
    loop: true,
    autoplay: true,
    slidesPerView: 5,
    spaceBetween: 10,
    // centeredSlides: true,
    // roundLengths: true,
    // If we need pagination

    breakpoints: {
      1024: {
        slidesPerView: 2,
        spaceBetween: 25,
      },
      768: {
        slidesPerView: 3,
        spaceBetween: 20,
      },
      640: {
        slidesPerView: 2,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
    },

    // Navigation arrows
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
    pagination: {
      el: ".swiper-pagination",
      // type: 'fraction'
    },

    // And if we need scrollbar
    scrollbar: {
      el: ".swiper-scrollbar",
    },
  });
}

function imgRevealer() {
  let revealContainers = document.querySelectorAll(".reveal");
  revealContainers.forEach((container) => {
    let image = container.querySelector("img");
    let revelerTl = gsap.timeline({
      scrollTrigger: {
        trigger: container,
        toggleActions: "restart none none reverse",
      },
    });
    revelerTl.set(container, {
      autoAlpha: 1,
    });
    revelerTl.from(container, 0.75, {
      xPercent: -100,
      ease: Power2.out,
    });
    revelerTl.from(image, 0.75, {
      xPercent: 100,
      scale: 1.3,
      delay: -0.75,
      ease: Power2.out,
    });
  });
}
